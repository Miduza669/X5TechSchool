'''
Домашнее задание 1 (срок – 31.08.2020, до конца дня)
Задача: реализовать игру в загадки

Требования:
- Программа выводит в консоль текст загадкок по одной и ждет ввода ответа от пользователя
- Программа после ввода ответа пользователя должна вывести в консоль результат. Если пользователь дал правильный ответ, то программа должна написать "Ответ {ОТВЕТ_ПОЛЬЗОВАТЕЛЯ} верен". Вместо "{ОТВЕТ_ПОЛЬЗОВАТЕЛЯ}" необходимо подставить ответ, введенный пользователем. Если пользователь ввел неправильный ответ, то программа должна написать "Неверный ответ."
- Программа задает пользователю 10 вопросов из списка ниже

Список вопросов и правильных ответов для работы:
1. "Какая версия языка сейчас актуальна?" - "Python3"
2. "Какая кодировка используется в строках?" - "UTF8"
3. "Какой оператор сравнения нужно использовать для работы с None и bool?" - "is"
4. "Сколько значений есть у bool?" - 2
5. "Что будет есть случайно умножить None на число?" - "Ошибка"
6. "Чему равно len('abc')?" - 3
7. "Какой цикл чаще используется?" - "for"
8. "Можно ли назвать свою переменную False?" - "Нет"
9. "Что будет результатом выражение 3 == 3.0?" - "True"
10. "Как форматировать строку?" - ".format"

Дополнительные требования (продвинутый уровень):
- Программа должна в конце игры сказать, сколько ответов дал пользователь: сколько из них было верных
- Программа должна не учитывать регистр ответа пользователя, например: "utf8" и "UTF8" оба должны быть правильным ответом на вопрос "Какая кодировка используется в строках?"


Домашнее задание 2 (срок – 07.09.2020, до конца дня)
Задача: реализовать игру в пятнашки

Требования:
- Игра пятнашки: https://ru.wikipedia.org/wiki/%D0%98%D0%B3%D1%80%D0%B0_%D0%B2_15 
- Поле состоит из клеток от 1 до 15 и пустой клетки
- Управление ведется кнопками "wasd", двигается пустая клетка
- В начале игры поле перемешено в случайном порядке
- Пользователь не должен совершать непозволительные шаги. Например, из-за ограничений рамки поля. Ему должно показываться сообщение о том, что он пытается совершить непозволительный ход
- Пользователю должно быть видно поле. Оно представляет собой матрицу 4 на 4. Пустую клетку обозначаем как x. При каждом действии пользователя поле рисуется еще раз - ниже в консоли
- Игра заканчивается, когда все клетки стоят по порядку, а пустая клетка - последняя. В конце игры пользователю показывается, сколько ходов он совершил
- Выход из игры происходит при помощи `ctrl + c`

Технические требования:
- Во вложении zip-архив с материалами для выполнения задания, используйте его в качестве основы.
- Игра должна соответствовать интерфейсу из файла game.py. Под "соответствовать интерфейсу" следует понимать: программа может иметь только те константы и функции, что уже определены, сам файл должен называться: `game.py`
- Внутри реализуемых функций может происходить любая логика
- Поле должно быть реализовано как плоский список

Дополнительные требования (продвинутый уровень, необязательно):
- Обратите внимание, что не любое поле оставляет возможность закончить игру, необходимо придумать корректный алгоритм генерации взамен простого перемешивания
- Можете попробовать запустить тесты, которые приложены для проверки при помощи `pytest`
'''
