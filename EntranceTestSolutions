'''Задача 1. Перевод секунд в минуты и часы
Напишите программу, которая переводит переданное количество секунд в часы и минуты.
Обратите внимание: необходимо указывать корректное склонение слов (секунда/секунды/секунд, минута/минуты/минут, час/часа/часов).
На стандартный поток ввода подается количество секунд, в ответ программа выводит его в виде часов, минут и секунд. Если значение часов/минут/секунд равно нулю, то оно не выводится.

Пример 1:
Ввод: 3600
Вывод: 1 час
 
Пример 2:
Ввод: 75
Вывод: 1 минута 15 секунд
 
Пример 3:
Ввод: 7205
Вывод: 2 часа 5 секунд
'''

#Решение
def GetTime():
    temp = input('Введите количество секунд:')
    if temp == '':
        raise Exception("Вы ничего не ввели")
    elif int(temp) < 0:
        raise Exception("Введённое число меньше 0")
    else:
        temp = int(temp)
        return [temp//60//60, temp//60%60, temp%60]

def SetUserFriendlyTimeText(x):
    timeText = [[' час', ' часа', ' часов'],
               [' минута', ' минуты', ' минут'],
               [' секунда', ' секунды', ' секунд']]
    result = []
    for i in range(len(x)):
        if x[i] > 0:
            if x[i]%100//10 == 1:
                result += str(x[i]) + timeText[i][2]
            elif x[i]%10 == 1:
                result.append(str(x[i]) + timeText[i][0])
            elif 2 <= x[i]%10 <= 4:
                result.append(str(x[i]) + timeText[i][1])
            elif 5 <= x[i]%10 <= 9:
                result.append(str(x[i]) + timeText[i][2])
    return result

while True:
    try:
        print(" ".join(map(str, SetUserFriendlyTimeText(GetTime()))))
        break
    except Exception as e:
        print(e)
        
        
'''Задача 2. Треугольник высотой N
 
Вам дано целое число N, N > 0. Выведите на экран треугольник высотой N как в примере:
 
Пример:
Ввод:
4
 
Вывод:
   1
  22
 333
4444
 
Обратите внимание на количество пробелов перед числами при выводе треугольника
*А сможете сделать эту задачу используя только арифметические операции, один цикл for и оператор print?
'''
#Решение
x = int(input())
f = [[' '] * x] * x
for i in range(x):
    for j in range(i + 1):
        f[i][x - j - 1] = i + 1
    print("".join(map(str,f[i])))


'''Задача 3. Частый элемент
Дан массив a из n целых чисел. Напишите программу, которая найдет самое первое встретившееся число, которое чаще других встречается в массиве. 

Формат ввода:
В первой строке входных данных записано число n (1 ≤ n ≤ 300 000). 
Во второй строке записаны n целых чисел ai (0 ≤ ai ≤ 1 000 000 000).
 
Формат вывода: выведите единственное число x, наибольшее из чисел, которое чаще других встречается в массиве a. 

Пример:
Ввод: 
5
1 1 2 2 2

Вывод:
2
'''

#Решение
#Функция поиска наиболее часто встречающего значения списка
def GetMoreOftenValue(x):
    tempValue = list(set(x))[0]
    for i in list(set(x)):
        tempValue = i if x.count(i) > x.count(tempValue) else tempValue
    return x.index(tempValue)

n = int(input())
ai = [int(i) for i in input().split()]
print(GetMoreOftenValue(ai[:n]))

'''
по условию требуется первым параметром указать количество чисел которое будет введно в массив.
ограничить кол-во введённых значений можно контролируя это после ввода каждого числа

n = int(input())
ai = [int(input()) for i in range(n)]
(не позволяет ввести массив в одну строку, что противоречит условию задачи)

альтернатива - считать всю строку и взять только "n" значений 
ai = [int(i) for i in input().split()]

В случае если будет введено чисел больше "n", условие задачи выполняется, 
но идёт перерасход памяти на хранение значений вне обрабатываемого интервала списка.
при этом есть риск, что пользователь введёт значений меньше "n" и программа вывалится в ошибку

В текущем решении принято докупущение "Во второй строке записаны n целых чисел", т.е. уол-во всегда = n

Если не принимать это условие задачи истину, можно после считывания массива проверять кол-во введённых цифр и если оно не равно "n" требовать ввести новые данные

while True:
    try:
        n = int(input())
        ai = [int(i) for i in input().split()]
        if len(ai) != n:
            raise Exception("Введён не корректный массив данных.")
        else:
            print(GetMoreOftenValue(ai[:n]))
    except Exception as e:
        print(e)
'''
