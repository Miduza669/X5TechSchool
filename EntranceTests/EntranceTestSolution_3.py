"""
Задача 3. Частый элемент
Дан массив a из n целых чисел. Напишите программу, которая найдет самое первое встретившееся число, которое чаще
других встречается в массиве.

Формат ввода:
В первой строке входных данных записано число n (1 ≤ n ≤ 300 000).
Во второй строке записаны n целых чисел ai (0 ≤ ai ≤ 1 000 000 000).

Формат вывода: выведите единственное число x, наибольшее из чисел, которое чаще других встречается в массиве a.

Пример:
Ввод:
5
1 1 2 2 2

Вывод:
2
"""


# Решение
# Функция поиска наиболее часто встречающего значения списка
def get_more_often_value(x):
    temp_value = list(set(x))[0]
    for i in list(set(x)):
        temp_value = i if x.count(i) > x.count(temp_value) else temp_value
    return x.index(temp_value)


n = int(input())
ai = [int(i) for i in input().split()]
print(get_more_often_value(ai[:n]))

'''
по условию требуется первым параметром указать количество чисел которое будет введно в массив.
ограничить кол-во введённых значений можно контролируя это после ввода каждого числа

n = int(input())
ai = [int(input()) for i in range(n)]
(не позволяет ввести массив в одну строку, что противоречит условию задачи)

альтернатива - считать всю строку и взять только "n" значений 
ai = [int(i) for i in input().split()]

В случае если будет введено чисел больше "n", условие задачи выполняется, 
но идёт перерасход памяти на хранение значений вне обрабатываемого интервала списка.
при этом есть риск, что пользователь введёт значений меньше "n" и программа вывалится в ошибку

В текущем решении принято докупущение "Во второй строке записаны n целых чисел", т.е. уол-во всегда = n

Если не принимать это условие задачи истину, можно после считывания массива проверять кол-во введённых цифр и если 
оно не равно "n" требовать ввести новые данные

while True:
    try:
        n = int(input())
        ai = [int(i) for i in input().split()]
        if len(ai) != n:
            raise Exception("Введён не корректный массив данных.")
        else:
            print(GetMoreOftenValue(ai[:n]))
    except Exception as e:
        print(e)
'''